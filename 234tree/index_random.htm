<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>2-3-4 trees</title>
<meta name="viewport" content="width=device-width,initial-scale=1">

<style>
 .highlight {
   fill: #ff0;
 }

 circle {
   fill: #fff;
   stroke: steelblue;
   stroke-width: 3px;
 }

 .node text { font: 12px sans-serif; }

 .link {
   fill: none;
   stroke: #ccc;
   stroke-width: 2px;
 }
 
</style>

</head>
<body>
<!--
<script src="http://d3js.org/d3.v3.min.js"></script>
 -->
<script src="./d3.v3.min.js"></script>

<script>


var descs = [
	{"frame":1, "adding":27, "whereForNext":"1", "nextText":"27 will be added here"},
	{"frame":2, "adding":5, "whereForNext":"1,27", "nextText":"5 will be added here"},
	{"frame":3, "adding":23, "whereForNext":"1,5,27", "nextText":"This node is full, so must be split by lifting its middle key into its parent node. As it has no parent node, a new root node is created to be its parent"},
	{"frame":4, "adding":23, "whereForNext":"27", "nextText":"23 will be added here"},
	{"frame":5, "adding":10, "whereForNext":"23,27", "nextText":"10 will be added here"},
	{"frame":6, "adding":9, "whereForNext":"10,23,27", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":7, "adding":9, "whereForNext":"10", "nextText":"9 will be added here"},
	{"frame":8, "adding":29, "whereForNext":"27", "nextText":"29 will be added here"},
	{"frame":9, "adding":26, "whereForNext":"27,29", "nextText":"26 will be added here"},
	{"frame":10, "adding":12, "whereForNext":"9,10", "nextText":"12 will be added here"},
	{"frame":11, "adding":8, "whereForNext":"9,10,12", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":12, "adding":8, "whereForNext":"5,10,23", "nextText":"This node is full, so must be split by lifting its middle key into its parent node. As it has no parent node, a new root node is created to be its parent"},
	{"frame":13, "adding":8, "whereForNext":"9", "nextText":"8 will be added here"},
	{"frame":14, "adding":7, "whereForNext":"8,9", "nextText":"7 will be added here"},
	{"frame":15, "adding":3, "whereForNext":"1", "nextText":"3 will be added here"},
	{"frame":16, "adding":19, "whereForNext":"12", "nextText":"19 will be added here"},
	{"frame":17, "adding":20, "whereForNext":"12,19", "nextText":"20 will be added here"},
	{"frame":18, "adding":2, "whereForNext":"1,3", "nextText":"2 will be added here"},
	{"frame":19, "adding":21, "whereForNext":"12,19,20", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":20, "adding":21, "whereForNext":"20", "nextText":"21 will be added here"},
	{"frame":21, "adding":24, "whereForNext":"26,27,29", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":22, "adding":24, "whereForNext":"19,23,27", "nextText":"This node is a full non-terminal node, so must be split by lifting its middle key into its parent node"},
	{"frame":23, "adding":24, "whereForNext":"26", "nextText":"24 will be added here"},
	{"frame":24, "adding":22, "whereForNext":"20,21", "nextText":"22 will be added here"},
	{"frame":25, "adding":15, "whereForNext":"12", "nextText":"15 will be added here"},
	{"frame":26, "adding":6, "whereForNext":"7,8,9", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":27, "adding":6, "whereForNext":"7", "nextText":"6 will be added here"},
	{"frame":28, "adding":28, "whereForNext":"29", "nextText":"28 will be added here"},
	{"frame":29, "adding":13, "whereForNext":"12,15", "nextText":"13 will be added here"},
	{"frame":30, "adding":31, "whereForNext":"28,29", "nextText":"31 will be added here"},
	{"frame":31, "adding":17, "whereForNext":"12,13,15", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":32, "adding":17, "whereForNext":"15", "nextText":"17 will be added here"},
	{"frame":33, "adding":16, "whereForNext":"15,17", "nextText":"16 will be added here"},
	{"frame":34, "adding":30, "whereForNext":"28,29,31", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":35, "adding":30, "whereForNext":"31", "nextText":"30 will be added here"},
	{"frame":36, "adding":11, "whereForNext":"12", "nextText":"11 will be added here"},
	{"frame":37, "adding":18, "whereForNext":"15,16,17", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":38, "adding":18, "whereForNext":"13,16,19", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":39, "adding":18, "whereForNext":"10,16,23", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":40, "adding":18, "whereForNext":"17", "nextText":"18 will be added here"},
	{"frame":41, "adding":14, "whereForNext":"15", "nextText":"14 will be added here"},
	{"frame":42, "adding":4, "whereForNext":"1,2,3", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":43, "adding":4, "whereForNext":"2,5,8", "nextText":"This node is full, so split it by lifting the middle key into its parent node"},
	{"frame":44, "adding":4, "whereForNext":"3", "nextText":"4 will be added here"},
	{"frame":45, "adding":25, "whereForNext":"24,26", "nextText":"25 will be added here"}
	];

const maxFrame=46;

var data = [
    { "name" : "1", "parent":"null", "firstFrame":1, "lastFrame":1 },
    { "name" : "1,27", "parent":"null", "firstFrame":2, "lastFrame":2 },
    { "name" : "1,5,27", "parent":"null", "firstFrame":3, "lastFrame":3 },
    { "name" : "5", "parent":"null", "firstFrame":4, "lastFrame":6 },
    { "name" : "1", "parent":"5", "firstFrame":4, "lastFrame":6 },	
    { "name" : "27", "parent":"5", "firstFrame":4, "lastFrame":4 },
	{ "name" : "23,27", "parent":"5", "firstFrame":5, "lastFrame":5 },
	{ "name" : "10,23,27", "parent":"5", "firstFrame":6, "lastFrame":6 },
	{ "name" : "5,23", "parent":"null", "firstFrame":7, "lastFrame":11 },
	{ "name" : "1", "parent":"5,23", "firstFrame":7, "lastFrame":11 },
	{ "name" : "10", "parent":"5,23", "firstFrame":7, "lastFrame":7 },
	{ "name" : "9,10", "parent":"5,23", "firstFrame":8, "lastFrame":10 },
	{ "name" : "27", "parent":"5,23", "firstFrame":7, "lastFrame":8 },
	{ "name" : "27,29", "parent":"5,23", "firstFrame":9, "lastFrame":9 },
	{ "name" : "9,10,12", "parent":"5,23", "firstFrame":11, "lastFrame":11 },
	{ "name" : "26,27,29", "parent":"5,23", "firstFrame":10, "lastFrame":11 },
	{ "name" : "5,10,23", "parent":"null", "firstFrame":12, "lastFrame":12 },
	{ "name" : "1", "parent":"5,10,23", "firstFrame":12, "lastFrame":12 },
	{ "name" : "9", "parent":"5,10,23", "firstFrame":12, "lastFrame":12 },
	{ "name" : "12", "parent":"5,10,23", "firstFrame":12, "lastFrame":12 },
	{ "name" : "26,27,29", "parent":"5,10,23", "firstFrame":12, "lastFrame":12 },
	{ "name" : "10", "parent":"null", "firstFrame":13, "lastFrame":22 },
	{ "name" : "5", "parent":"10", "firstFrame":13, "lastFrame":22 },
	{ "name" : "23", "parent":"10", "firstFrame":13, "lastFrame":19 },
	{ "name" : "1", "parent":"5", "firstFrame":13, "lastFrame":15 },
	{ "name" : "9", "parent":"5", "firstFrame":13, "lastFrame":13 },
	{ "name" : "12", "parent":"23", "firstFrame":13, "lastFrame":16 },
	{ "name" : "8,9", "parent":"5", "firstFrame":14, "lastFrame":14 },
	{ "name" : "1,3", "parent":"5", "firstFrame":16, "lastFrame":18 },
	{ "name" : "12,19", "parent":"23", "firstFrame":17, "lastFrame":17 },
	{ "name" : "12,19,20", "parent":"23", "firstFrame":18, "lastFrame":19 },
	{ "name" : "26,27,29", "parent":"23", "firstFrame":13, "lastFrame": 19},
	{ "name" : "19,23", "parent":"10", "firstFrame":20, "lastFrame":21 },
	{ "name" : "12", "parent":"19,23", "firstFrame":20, "lastFrame":21 },
	{ "name" : "20", "parent":"19,23", "firstFrame":20, "lastFrame":20 },
	{ "name" : "20,21", "parent":"19,23", "firstFrame":21, "lastFrame":21 },
	{ "name" : "26,27,29", "parent":"19,23", "firstFrame":20, "lastFrame":21 },
	{ "name" : "19,23,27", "parent":"10", "firstFrame":22, "lastFrame":22 },
	{ "name" : "12", "parent":"19,23,27", "firstFrame":22, "lastFrame":22 },
	{ "name" : "20,21", "parent":"19,23,27", "firstFrame":22, "lastFrame":22 },
	{ "name" : "26", "parent":"19,23,27", "firstFrame":22, "lastFrame":22 },
	{ "name" : "29", "parent":"19,23,27", "firstFrame":22, "lastFrame":22 },
	{ "name" : "10,23", "parent":"null", "firstFrame":23, "lastFrame":38 },
	{ "name" : "5", "parent":"10,23", "firstFrame":23, "lastFrame":26 },
	{ "name" : "1,2,3", "parent":"5", "firstFrame":19, "lastFrame":26 },
	{ "name" : "7,8,9", "parent":"5", "firstFrame":15, "lastFrame":26 },
	{ "name" : "5,8", "parent":"10,23", "firstFrame":27, "lastFrame":38 },
	{ "name" : "19", "parent":"10,23", "firstFrame":23, "lastFrame":31 },
	{ "name" : "12", "parent":"19", "firstFrame":23, "lastFrame":25 },
	{ "name" : "12,15", "parent":"19", "firstFrame":26, "lastFrame":29 },
	{ "name" : "20,21", "parent":"19", "firstFrame":23, "lastFrame":24 },
	{ "name" : "13,19", "parent":"10,23", "firstFrame":32, "lastFrame":37 },
	{ "name" : "27", "parent":"10,23", "firstFrame":23, "lastFrame":34 },
	{ "name" : "26", "parent":"27", "firstFrame":23, "lastFrame":23 },
	{ "name" : "24,26", "parent":"27", "firstFrame":24, "lastFrame":34 },
	{ "name" : "29", "parent":"27", "firstFrame":23, "lastFrame":28 },
	{ "name" : "28,29", "parent":"27", "firstFrame":29, "lastFrame":30 },
	{ "name" : "12,13,15", "parent":"19", "firstFrame":30, "lastFrame":31 },
	{ "name" : "20,21,22", "parent":"19", "firstFrame":25, "lastFrame":31 },
	{ "name" : "28,29,31", "parent":"27", "firstFrame":31, "lastFrame":34 },
	{ "name" : "12", "parent":"13,19", "firstFrame":32, "lastFrame":36 },
	{ "name" : "15", "parent":"13,19", "firstFrame":32, "lastFrame":32 },
	{ "name" : "15,17", "parent":"13,19", "firstFrame":33, "lastFrame":33 },
	{ "name" : "11,12", "parent":"13,19", "firstFrame":37, "lastFrame":37 },
	{ "name" : "15,16,17", "parent":"13,19", "firstFrame":34, "lastFrame":37 },
	{ "name" : "20,21,22", "parent":"13,19", "firstFrame":32, "lastFrame":37 },
	{ "name" : "13,16,19", "parent":"10,23", "firstFrame":38, "lastFrame":38 },
	{ "name" : "27,29", "parent":"10,23", "firstFrame":35, "lastFrame":38 },
	{ "name" : "11,12", "parent":"13,16,19", "firstFrame":38, "lastFrame":38 },
	{ "name" : "15", "parent":"13,16,19", "firstFrame":38, "lastFrame":38 },
	{ "name" : "17", "parent":"13,16,19", "firstFrame":38, "lastFrame":38 },
	{ "name" : "20,21,22", "parent":"13,16,19", "firstFrame":38, "lastFrame":38 },
	{ "name" : "10,16,23", "parent":"null", "firstFrame":39, "lastFrame":39 },
	{ "name" : "5,8", "parent":"10,16,23", "firstFrame":39, "lastFrame":39 },
	{ "name" : "13", "parent":"10,16,23", "firstFrame":39, "lastFrame":39 },
	{ "name" : "19", "parent":"10,16,23", "firstFrame":39, "lastFrame":39 },
	{ "name" : "27,29", "parent":"10,16,23", "firstFrame":39, "lastFrame":39 },
	{ "name" : "16", "parent":"null", "firstFrame":40, "lastFrame":46 },
	{ "name" : "10", "parent":"16", "firstFrame":40, "lastFrame":43 },
	{ "name" : "5,8", "parent":"10", "firstFrame":40, "lastFrame":42 },
	{ "name" : "1,2,3", "parent":"5,8", "firstFrame":27, "lastFrame":42 },
	{ "name" : "7", "parent":"5,8", "firstFrame":27, "lastFrame":27 },
	{ "name" : "6,7", "parent":"5,8", "firstFrame":28, "lastFrame":42 },
	{ "name" : "9", "parent":"5,8", "firstFrame":27, "lastFrame":42},
	{ "name" : "2,5,8", "parent":"10", "firstFrame":43, "lastFrame":43 },
	{ "name" : "1", "parent":"2,5,8", "firstFrame":43, "lastFrame":43 },
	{ "name" : "3", "parent":"2,5,8", "firstFrame":43, "lastFrame":43 },
	{ "name" : "6,7", "parent":"2,5,8", "firstFrame":43, "lastFrame":43 },
	{ "name" : "9", "parent":"2,5,8", "firstFrame":43, "lastFrame":43 },
	{ "name" : "13", "parent":"10", "firstFrame":40, "lastFrame":43 },
	{ "name" : "5,10", "parent":"16", "firstFrame":44, "lastFrame":46 },
	{ "name" : "23", "parent":"16", "firstFrame":40, "lastFrame":46 },
	{ "name" : "19", "parent":"23", "firstFrame":40, "lastFrame":46 },
	{ "name" : "17", "parent":"19", "firstFrame":39, "lastFrame":40 },
	{ "name" : "17,18", "parent":"19", "firstFrame":41, "lastFrame":46 },
	{ "name" : "20,21,22", "parent":"19", "firstFrame":39, "lastFrame":46 },
	{ "name" : "27,29", "parent":"23", "firstFrame":40, "lastFrame":46 },
	{ "name" : "2", "parent":"5,10", "firstFrame":44, "lastFrame":46 },
	{ "name" : "8", "parent":"5,10", "firstFrame":44, "lastFrame":46 },
	{ "name" : "13", "parent":"5,10", "firstFrame":44, "lastFrame":46 },
	{ "name" : "11,12", "parent":"13", "firstFrame":39, "lastFrame":46 },
	{ "name" : "15", "parent":"13", "firstFrame":39, "lastFrame":41 },
	{ "name" : "14,15", "parent":"13", "firstFrame":42, "lastFrame":46 },
	{ "name" : "1", "parent":"2", "firstFrame":44, "lastFrame":46 },
	{ "name" : "3", "parent":"2", "firstFrame":44, "lastFrame":44 },
	{ "name" : "3,4", "parent":"2", "firstFrame":45, "lastFrame":46 },
	{ "name" : "6,7", "parent":"8", "firstFrame":44, "lastFrame":46 },
	{ "name" : "9", "parent":"8", "firstFrame":44, "lastFrame":46 },
	{ "name" : "24,26", "parent":"27,29", "firstFrame":35, "lastFrame":45 },
	{ "name" : "24,25,26", "parent":"27,29", "firstFrame":46, "lastFrame":46 },
	{ "name" : "28", "parent":"27,29", "firstFrame":35, "lastFrame":46 },
	{ "name" : "31", "parent":"27,29", "firstFrame":35, "lastFrame":35 },	
	{ "name" : "30,31", "parent":"27,29", "firstFrame":36, "lastFrame":46 },
    ];

function createMap() {
	map = {};
	for (idx in data) {
		node = data[idx];
		if (node.firstFrame <= frame && node.lastFrame >= frame) {
			map[node.name] = node;
		}
	}
	return map;
}

var dataMap = data.reduce(function(map, node) {
	if (node.firstFrame <= frame && node.lastFrame >= frame) {
		map[node.name] = node;
	}
	return map;
}, {});

var frame=1;

// create the tree array
var treeData = [];

function unflattenTree() {
	console.log("in unflattenTree, frame=" + frame);
	treeData = [];

	dm = createMap();

	data.forEach(function(node) {
		if (node.firstFrame > frame || node.lastFrame < frame) {
			return;
		}
		console.log("keeping node " + node.name + " with firstFrame=" + node.firstFrame + " and lastFrame=" + node.lastFrame);
		
		if (node.parent.name) {
			node.parent = node.parent.name
		}
		node.children = [];

		// add to parent
		var parent = dm[node.parent];
		if (parent) {
			parent.children.push(node);
		} else {
			// parent is null or missing
			treeData.push(node);
		}
	});
}

// ************** Generate the tree diagram  *****************
var margin = {top: 50, right: 50, bottom: 20, left: 50},
 width = 1200 - margin.right - margin.left,
 height = 500 - margin.top - margin.bottom;
 
var i = 0;

var tree = d3.layout.tree()
 .size([height, width]);

var diagonal = d3.svg.diagonal()
 .projection(function(d) { return [d.x, d.y]; });

var svg = d3.select("body").append("svg")
 .attr("width", width + margin.right + margin.left)
 .attr("height", height + margin.top + margin.bottom)
 .append("g")
 .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var root;

drawFrame();

function renderTree(source) {

	d3.selectAll(".node").remove();
	d3.selectAll(".link").remove();

  // Compute the new tree layout.
  var nodes = tree.nodes(root).reverse(),
   links = tree.links(nodes);

  // Normalize for fixed-depth.
  nodes.forEach(function(d) { d.y = d.depth * 100; d.x = d.x * 1.5;});

  // Declare the nodes
  var node = svg.selectAll("g.node")
   .data(nodes, function(d) { return d.id || (d.id = ++i); });

  // Enter the nodes.
  var nodeEnter = node.enter().append("g")
   .attr("class", "node")
   .attr("transform", function(d) { 
    return "translate(" + d.x + "," + d.y + ")"; });
	
  nodeEnter.append("circle")
   .attr("r", 8)
   .attr("id", function(d){return "t" + d.name.replaceAll(",", "_")});

  nodeEnter.append("text")
   .attr("y", function(d) { 
    return d.children || d._children ? -18 : 18; })
   .attr("dy", ".35em")
   .attr("text-anchor", "middle")
   .text(function(d) { return d.name; })
   .style("fill-opacity", 1);
   
  // Declare the links
  var link = svg.selectAll("path.link")
   .data(links, function(d) { return d.target.id; });

  // Enter the links.
  link.enter().insert("path", "g")
   .attr("class", "link")
   .attr("d", diagonal);

}

function drawFrame() {
	console.log("in drawFrame, frame = " + frame);
	unflattenTree();
	root = treeData[0];  
	renderTree(root);

	if (frame < maxFrame) {
		const selectorText = "#t" + descs[frame-1].whereForNext.replaceAll(",", "_");
		const importantNode = document.querySelector(selectorText);
		if (importantNode) {
			importantNode.classList.add("highlight");
		}
	}
}

function nextFrame() {
	if (frame < maxFrame) {
		frame = frame + 1;
		console.log("in nextFrame, frame = " + frame);

		drawFrame();

		const frameData = descs[frame-1];
		
		if (frame < maxFrame) {
			const div1 = document.querySelector("#blurb1");
			div1.innerHTML = "<p>" + frameData.nextText + ".</p>";

			const div2 = document.querySelector("#blurb2");
			div2.innerHTML = "<p>Trying to add " + frameData.adding + ".</p>";
			
			const div3 = document.querySelector("#blurb3");
			div3.innerHTML = "<p>Step " + frame + "</p>";
		}
	} else {
		console.log("in nextFrame but after the last frame. frame = " + frame);
	}
}

</script>

<p>The node highlighted in yellow is where the next change will happen.</p>

<input id="NextFrameButton" type="button" value="Next" onclick="nextFrame();" />

<div id="blurb3"><p>Step 1</p></div>
<div id="blurb2"><p>Trying to add 27.</p></div>
<div id="blurb1"><p>1 is added to an empty tree, which creates the first node. 27 will be added to this node as well.</p></div>

<script>
/*
http://www.d3noob.org/2014/01/tree-diagrams-in-d3js_11.html
https://www.goodmarketing.club/guide/d3-js-how-to-build-a-tree-chart-w-line-by-line-code-explanations/

*/
</script>
</body>
</html>